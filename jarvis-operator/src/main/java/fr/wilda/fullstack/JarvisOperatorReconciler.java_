package fr.wilda.fullstack;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import io.fabric8.kubernetes.api.model.EnvFromSourceBuilder;
import io.fabric8.kubernetes.api.model.IntOrString;
import io.fabric8.kubernetes.api.model.Service;
import io.fabric8.kubernetes.api.model.ServiceBuilder;
import io.fabric8.kubernetes.api.model.apps.Deployment;
import io.fabric8.kubernetes.api.model.apps.DeploymentBuilder;
import io.fabric8.kubernetes.client.KubernetesClient;
import io.fabric8.kubernetes.client.utils.Serialization;
import io.javaoperatorsdk.operator.api.reconciler.Context;
import io.javaoperatorsdk.operator.api.reconciler.EventSourceContext;
import io.javaoperatorsdk.operator.api.reconciler.Reconciler;
import io.javaoperatorsdk.operator.api.reconciler.UpdateControl;
import io.javaoperatorsdk.operator.processing.event.ResourceID;
import io.javaoperatorsdk.operator.processing.event.source.EventSource;
import io.javaoperatorsdk.operator.processing.event.source.inbound.SimpleInboundEventSource;
import jakarta.enterprise.inject.Produces;

public class JarvisOperatorReconciler implements Reconciler<JarvisOperator> {
    private static final Logger _LOG = LoggerFactory.getLogger(JarvisOperatorReconciler.class);

    // 4.12-add-reconciler-var

    // 4.13-add-event-source

    // 4.14-create-deployment

    // 4.15-create-service
 
    @Override
    public UpdateControl<JarvisOperator> reconcile(JarvisOperator resource, Context<JarvisOperator> context) {
        _LOG.info("⚡️ Event occurs ! Reconcile called.");

        // 4.16-namespace-and-status

        // 4.17-deploy-jarvis
        

        // 4.21-apply-status-patch
        
        return null;
    }

    /**
     * Fire an event to awake the reconciler.
     * 
     * @param tag The new tag on GitHub.
     */
    // 4.22-add-fire-event-method
}